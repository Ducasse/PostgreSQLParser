Class {
	#name : #PSQLSymbolsResolver,
	#superclass : #PSQLVisitor,
	#category : #PostgreSQL-AST-Visitors-Core
}

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTAggregateFunctionCall: aPSQLASTAggregateFunctionCall [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTAllClause: aPSQLASTAllClause [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTAlternativeSelectIntoQuery: aPSQLASTAlternativeSelectIntoQuery [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTArrayConstructor: aPSQLASTArrayConstructor [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTAttributeAccess: aPSQLASTAttributeAccess [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTBinaryOperator: aPSQLASTBinaryOperator [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTColumnDefinition: aPSQLASTColumnDefinition [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTCompositeValue: aPSQLASTCompositeValue [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTConditionalExpression: aPSQLASTConditionalExpression [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTConflictAction: aPSQLASTConflictAction [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTDefaultValue: aPSQLASTDefaultValue [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTDefaultValues: aPSQLASTDefaultValues [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTDeleteQuery: aPSQLASTDeleteQuery [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTDistinctClause: aPSQLASTDistinctClause [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTExceptClause: aPSQLASTExceptClause [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTFetchClause: aPSQLASTFetchClause [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTForClause: aPSQLASTForClause [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTFromClause: aPSQLASTFromClause [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTFromClauseItemType1: aPSQLASTFromClauseItemType1 [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTFromClauseItemType2: aPSQLASTFromClauseItemType2 [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTFromClauseItemType3: aPSQLASTFromClauseItemType3 [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTFromClauseItemType4: aPSQLASTFromClauseItemType4 [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTFromClauseItemType5: aPSQLASTFromClauseItemType5 [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTFromClauseItemType6: aPSQLASTFromClauseItemType6 [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTFromClauseItemType7: aPSQLASTFromClauseItemType7 [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTFunctionCall: aPSQLASTFunctionCall [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTGroupByClause: aPSQLASTGroupByClause [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTHavingClause: aPSQLASTHavingClause [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTIdentifier: aPSQLASTIdentifier [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTInsertQuery: aPSQLASTInsertQuery [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTIntersectClause: aPSQLASTIntersectClause [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTIntoClause: aPSQLASTIntoClause [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTLimitClause: aPSQLASTLimitClause [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTNumericConstant: aPSQLASTNumericConstant [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTOffsetClause: aPSQLASTOffsetClause [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTOnConflictClause: aPSQLASTOnConflictClause [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTOrderByClause: aPSQLASTOrderByClause [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTOrderByClauseItem: aPSQLASTOrderByClauseItem [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTParenthesedExpression: aPSQLASTParenthesedExpression [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTPostfixOperator: aPSQLASTPostfixOperator [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTPrefixOperator: aPSQLASTPrefixOperator [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTReturningClause: aPSQLASTReturningClause [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTSelectIntoQuery: aPSQLASTSelectIntoQuery [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTSelectQuery: aPSQLASTSelectQuery [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTSelectWhereClause: aPSQLASTSelectWhereClause [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTSetClause: aPSQLASTSetClause [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTSetClauseItemType1: aPSQLASTSetClauseItemType1 [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTSetClauseItemType2: aPSQLASTSetClauseItemType2 [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTSetClauseItemType3: aPSQLASTSetClauseItemType3 [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTStringConstant: aPSQLASTStringConstant [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTSubscript: aPSQLASTSubscript [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTTableAlias: aPSQLASTTableAlias [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTUnionClause: aPSQLASTUnionClause [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTUpdateDeleteWhereClause: aPSQLASTUpdateDeleteWhereClause [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTUpdateQuery: aPSQLASTUpdateQuery [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTWildCard: aPSQLASTWildCard [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLASTWithClause: aPSQLASTWithClause [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLPlpgSQLASTAliasDeclaration: aPSQLPlpgSQLASTAliasDeclaration [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLPlpgSQLASTArrayLoop: aPSQLPlpgSQLASTArrayLoop [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLPlpgSQLASTAssignment: aPSQLPlpgSQLASTAssignment [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLPlpgSQLASTBlock: aPSQLPlpgSQLASTBlock [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLPlpgSQLASTBlockLabel: aPSQLPlpgSQLASTBlockLabel [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLPlpgSQLASTClassicDeclaration: aPSQLPlpgSQLASTClassicDeclaration [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLPlpgSQLASTContinue: aPSQLPlpgSQLASTContinue [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLPlpgSQLASTCopyTypeDeclaration: aPSQLPlpgSQLASTCopyTypeDeclaration [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLPlpgSQLASTForLoop: aPSQLPlpgSQLASTForLoop [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLPlpgSQLASTIf: aPSQLPlpgSQLASTIf [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLPlpgSQLASTPositionalParameter: aPSQLPlpgSQLASTPositionalParameter [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLPlpgSQLASTQueryResultsLoop: aPSQLPlpgSQLASTQueryResultsLoop [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLPlpgSQLASTRaiseStatement: aPSQLPlpgSQLASTRaiseStatement [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLPlpgSQLASTRecordDeclaration: aPSQLPlpgSQLASTRecordDeclaration [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLPlpgSQLASTReturnStatement: aPSQLPlpgSQLASTReturnStatement [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLPlpgSQLASTRowTypeDeclaration: aPSQLPlpgSQLASTRowTypeDeclaration [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLPlpgSQLASTSearchedCase: aPSQLPlpgSQLASTSearchedCase [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLPlpgSQLASTSimpleCase: aPSQLPlpgSQLASTSimpleCase [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLPlpgSQLASTType: aPSQLPlpgSQLASTType [
	^ self shouldBeImplemented
]

{ #category : #visiting }
PSQLSymbolsResolver >> visitPSQLPlpgSQLASTWhileLoop: aPSQLPlpgSQLASTWhileLoop [
	^ self shouldBeImplemented
]
