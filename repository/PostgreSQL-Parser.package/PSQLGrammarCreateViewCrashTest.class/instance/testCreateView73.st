as yet unclassified
testCreateView73
	self
		parse: 'CREATE VIEW selected_event_seen_by_member AS SELECT member.id AS seen_by_member_id, CASE WHEN (event.state = ANY (ARRAY[''voting''::issue_state, ''finished_without_winner''::issue_state, ''finished_with_winner''::issue_state])) THEN ''voting''::notify_level ELSE CASE WHEN (event.state = ANY (ARRAY[''verification''::issue_state, ''canceled_after_revocation_during_verification''::issue_state, ''canceled_no_initiative_admitted''::issue_state])) THEN ''verification''::notify_level ELSE CASE WHEN (event.state = ANY (ARRAY[''discussion''::issue_state, ''canceled_after_revocation_during_discussion''::issue_state])) THEN ''discussion''::notify_level ELSE ''all''::notify_level END END END AS notify_level, event.id, event.occurrence, event.event, event.member_id, event.issue_id, event.state, event.initiative_id, event.draft_id, event.suggestion_id FROM ((((((member CROSS JOIN event) LEFT JOIN issue ON ((event.issue_id = issue.id))) LEFT JOIN membership ON (((member.id = membership.member_id) AND (issue.area_id = membership.area_id)))) LEFT JOIN interest ON (((member.id = interest.member_id) AND (event.issue_id = interest.issue_id)))) LEFT JOIN ignored_member ON (((member.id = ignored_member.member_id) AND (event.member_id = ignored_member.other_member_id)))) LEFT JOIN ignored_initiative ON (((member.id = ignored_initiative.member_id) AND (event.initiative_id = ignored_initiative.initiative_id)))) WHERE (((((((member.notify_level >= ''all''::notify_level) OR ((member.notify_level >= ''voting''::notify_level) AND (event.state = ANY (ARRAY[''voting''::issue_state, ''finished_without_winner''::issue_state, ''finished_with_winner''::issue_state])))) OR ((member.notify_level >= ''verification''::notify_level) AND (event.state = ANY (ARRAY[''verification''::issue_state, ''canceled_after_revocation_during_verification''::issue_state, ''canceled_no_initiative_admitted''::issue_state])))) OR ((member.notify_level >= ''discussion''::notify_level) AND (event.state = ANY (ARRAY[''discussion''::issue_state, ''canceled_after_revocation_during_discussion''::issue_state])))) AND ((interest.member_id IS NOT NULL) OR ((membership.member_id IS NOT NULL) AND (event.event = ANY (ARRAY[''issue_state_changed''::event_type, ''initiative_created_in_new_issue''::event_type, ''initiative_created_in_existing_issue''::event_type, ''initiative_revoked''::event_type]))))) AND (ignored_member.member_id IS NULL)) AND (ignored_initiative.member_id IS NULL))' rule: #createViewCommand