as yet unclassified
testCreateView66
	self
		parse: 'CREATE VIEW member_contingent AS SELECT member.id AS member_id, contingent.polling, contingent.time_frame, CASE WHEN (contingent.text_entry_limit IS NOT NULL) THEN (( SELECT count(1) AS count FROM (draft JOIN initiative ON ((initiative.id = draft.initiative_id))) WHERE (((draft.author_id = member.id) AND (initiative.polling = contingent.polling)) AND (draft.created > (now() - contingent.time_frame)))) + ( SELECT count(1) AS count FROM (suggestion JOIN initiative ON ((initiative.id = suggestion.initiative_id))) WHERE (((suggestion.author_id = member.id) AND (contingent.polling = false)) AND (suggestion.created > (now() - contingent.time_frame))))) ELSE NULL::bigint END AS text_entry_count, contingent.text_entry_limit, CASE WHEN (contingent.initiative_limit IS NOT NULL) THEN ( SELECT count(1) AS count FROM (opening_draft draft JOIN initiative ON ((initiative.id = draft.initiative_id))) WHERE (((draft.author_id = member.id) AND (initiative.polling = contingent.polling)) AND (draft.created > (now() - contingent.time_frame)))) ELSE NULL::bigint END AS initiative_count, contingent.initiative_limit FROM (member CROSS JOIN contingent)' rule: #createViewCommand