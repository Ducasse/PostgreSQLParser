as yet unclassified
testCreateView22
	self
		parse: 'CREATE VIEW vue_personnel_recherche_permanents_copy AS SELECT personne.cle AS clepersonne, civilite.civilite AS labelcivilite, personne.nom AS nompersonne, personne.prenom, personne.datenaissance, pays.nom AS nompays, grade.grade, employeur.nom AS nomemployeur, support.debut AS debutsupport, support.fin AS finsupport, agt_genere_liste(((((equipe.nom)::text || '' (''::text) || affectation.repartition) || ''%)''::text)) AS nomequipes FROM personne, pays, civilite, grade, categorie, employeur, equipe, (affectation LEFT JOIN support ON ((affectation.cle_support = support.cle))) WHERE ((affectation.cle_equipe = equipe.cle) AND ((((((((personne.paysorigine = pays.cle) AND (personne.cle = support.cle_personne)) AND (personne.civilite = civilite.cle)) AND (support.cle_grade = grade.cle)) AND (support.cle_categorie = categorie.cle)) AND (support.cle_employeur = employeur.cle)) AND ((support.debut <= now()) AND ((support.fin >= now()) OR (support.fin IS NULL)))) AND (((((support.cle_grade = 25) OR (support.cle_grade = 51)) OR (support.cle_grade = 52)) OR (support.cle_grade = 53)) OR (((((((((((support.cle_grade = 9) OR (support.cle_grade = 10)) OR (support.cle_grade = 11)) OR (support.cle_grade = 12)) OR (support.cle_grade = 20)) OR (support.cle_grade = 21)) OR (support.cle_grade = 22)) OR (support.cle_grade = 24)) OR (support.cle_grade = 26)) AND ((affectation.debut <= now()) AND ((affectation.fin >= now()) OR (affectation.fin IS NULL)))) AND ((categorie.categorie)::text = ''PERMANENT''::text))))) GROUP BY personne.cle, civilite.civilite, personne.nom, personne.prenom, personne.datenaissance, pays.nom, grade.grade, employeur.nom, support.debut, support.fin' rule: #createViewCommand